/* The @keyframes CSS at-rule controls the intermediate steps in a CSS animation sequence by 
defining styles for keyframes (or waypoints) along the animation sequence. This gives more 
control over the intermediate steps of the animation sequence than transitions. */
@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem); }
  /* 60% {
      transform: rotate(90deg);
    } */
  80% {
    transform: translateX(1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem); }
  80% {
    transform: translateX(-1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

.paragraph {
  font-size: 1.6rem; }
  .paragraph:not(:last-child) {
    margin-bottom: 3rem; }

.center-text {
  text-align: center; }

.mb-8 {
  margin-bottom: 8rem; }

.mb-sm {
  margin-bottom: 1.5rem; }

.header {
  height: 95vh;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url("../img/hero.jpg");
  background-size: cover;
  background-position: top;
  /* The clip-path property in CSS allows you to specify a specific region of an element to display, rather than showing the complete area. */
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  position: relative; }

.logo-box {
  position: absolute;
  top: 4rem;
  left: 4rem; }

.logo {
  height: 3.5rem; }

.primary-heading {
  color: #fff;
  text-transform: uppercase;
  backface-visibility: hidden;
  margin-bottom: 6rem; }

.primary-heading-main {
  display: block;
  font-size: 6rem;
  letter-spacing: 3.5rem;
  animation-name: moveInLeft;
  animation-duration: 1s;
  animation-timing-function: ease-out;
  /* Other useful animation properties 
      animation-delay: 3s;
      animation-iteration-count: 4;
      animation-timing-function: ease | ease-in | ease-out, etc...
    */ }

.primary-heading-secondary {
  display: block;
  font-size: 2rem;
  font-weight: 700;
  letter-spacing: 1.75rem;
  /* animation-name: moveInRight;
    animation-duration: 1s;
    animation-timing-function: ease-out; */
  /* Short-Hand Syntax */
  animation: moveInRight 1s ease-out; }

.centered-text-box {
  /* These values are relative to the element's parent (header) */
  position: absolute;
  top: 50%;
  left: 50%;
  /* These values are in relation to the element itself */
  transform: translate(-50%, -50%);
  /* This centers text inside */
  text-align: center; }

.about-section {
  background-color: #f7f7f7;
  padding: 25rem 0;
  margin-top: -20vh; }

.secondary-heading {
  font-size: 3.5rem;
  text-transform: uppercase;
  font-weight: 700;
  display: inline-block;
  background-image: linear-gradient(to right, #7ed56f, #28b485);
  -webkit-background-clip: text;
  background-clip: text;
  color: transparent;
  letter-spacing: 2px;
  transition: all 0.2s; }
  .secondary-heading:hover {
    text-shadow: 0.5rem 1rem 2rem rgba(0, 0, 0, 0.2); }

.tertiary-heading {
  font-size: 1.6rem;
  font-weight: 700;
  text-transform: uppercase; }

.features {
  padding: 20rem 0;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url("../../img/nat-4.jpg");
  background-size: cover;
  transform: skewY(-5deg);
  margin-top: -10rem; }
  .features > * {
    transform: skewY(5deg); }

.tours {
  background-color: #f7f7f7;
  padding: 15rem 0;
  margin-top: -10rem; }

.stories {
  padding: 15rem 0;
  position: relative; }

.btn {
  /* On Click */
  /* ::after creates a pseudo-element that is the last child of the selected element. 
      It is often used to add cosmetic content to an element with the content property. 
      It is inline by default. */
  /* After pseudo element on hover state */ }
  .btn:link, .btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;
    border-radius: 5rem;
    /* The transition CSS property is a shorthand property for transition-property, 
        transition-duration, transition-timing-function, and transition-delay. */
    transition: all 0.2s;
    position: relative; }
  .btn:hover {
    transform: translateY(-3px);
    /* A box shadow is described by X and Y offsets relative to the element, blur and spread 
        radius, and color. */
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2); }
  .btn:active {
    transform: translateY(-1px);
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2); }
  .btn::after {
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 100px;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all 0.4s; }
  .btn:hover::after {
    transform: scale(1.5);
    opacity: 0; }

.btn-white {
  background-color: #fff;
  color: #777; }
  .btn-white::after {
    background-color: #fff; }

.btn-green {
  background-color: #55c57a;
  color: #fff; }
  .btn-green::after {
    background-color: #55c57a; }

.btn-animated {
  animation: moveInBottom 0.5s ease-out 0.75s;
  /* Automatically applies the styles defined in moveInBottom (e.g. opacity 0) 
    before the animation starts */
  animation-fill-mode: backwards; }

.btn-text:link, .btn-text:visited {
  font-size: 1.6rem;
  color: #55c57a;
  display: inline-block;
  text-decoration: none;
  border-bottom: 1px solid #55c57a;
  padding: 3px;
  transition: all 0.2s; }

.btn-text:hover {
  background-color: #55c57a;
  color: #fff;
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.15);
  transform: translateY(-2px); }

.btn-text:active {
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
  transform: translateY(0); }

.composition {
  position: relative; }
  .composition:hover .composition-photo:not(:hover) {
    transform: scale(0.95); }

.composition-photo {
  width: 55%;
  box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.4);
  border-radius: 2px;
  position: absolute;
  transition: all 0.2s;
  outline-offset: 1rem; }
  .composition-photo:hover {
    transform: scale(1.05) translateY(-0.5rem);
    box-shadow: 0 2.5rem 4rem rgba(0, 0, 0, 0.5);
    z-index: 2;
    outline: 1.5rem solid #55c57a; }

.composition-photo-p1 {
  left: 0;
  top: -2rem;
  z-index: 1; }

.composition-photo-p2 {
  right: 0;
  top: 2rem;
  z-index: 1; }

.composition-photo-p3 {
  left: 20%;
  top: 10rem;
  z-index: 1; }

.feature-box {
  background-color: rgba(255, 255, 255, 0.8);
  font-size: 1.5rem;
  padding: 2.5rem;
  text-align: center;
  border-radius: 3px;
  box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
  transition: transform 0.3s; }
  .feature-box:hover {
    transform: translateY(-1.5rem); }

.feature-box-icon {
  font-size: 6rem;
  margin-bottom: 0.5rem;
  display: inline-block;
  background-image: linear-gradient(to right, #7ed56f, #28b485);
  -webkit-background-clip: text;
  background-clip: text;
  color: transparent; }

.card {
  perspective: 150rem;
  -moz-perspective: 150rem;
  position: relative;
  height: 50rem; }
  .card .card-face {
    height: 50rem;
    transition: all 0.8s;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    backface-visibility: hidden;
    border-radius: 3px;
    box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
    overflow: hidden; }
  .card .card-face-front {
    background-color: #fff; }
  .card .card-face-back {
    transform: rotateY(180deg); }
  .card .card-face-back-1 {
    background-image: linear-gradient(to right bottom, #ffb900, #ff7730); }
  .card .card-face-back-2 {
    background-image: linear-gradient(to right bottom, #7ed56f, #28b485); }
  .card .card-face-back-3 {
    background-image: linear-gradient(to right bottom, #2998ff, #5643fa); }
  .card:hover .card-face-front {
    transform: rotateY(-180deg); }
  .card:hover .card-face-back {
    transform: rotateY(0); }
  .card .card-image {
    background-size: cover;
    height: 23rem;
    background-blend-mode: screen;
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
    clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
    border-top-left-radius: 3px;
    border-top-right-radius: 3px; }
  .card .card-image-1 {
    background-image: linear-gradient(to right bottom, #ffb900, #ff7730), url(../../img/nat-5.jpg); }
  .card .card-image-2 {
    background-image: linear-gradient(to right bottom, #7ed56f, #28b485), url(../../img/nat-6.jpg); }
  .card .card-image-3 {
    background-image: linear-gradient(to right bottom, #2998ff, #5643fa), url(../../img/nat-7.jpg); }
  .card .card-heading {
    font-size: 2.8rem;
    font-weight: 300;
    text-transform: uppercase;
    color: #fff;
    position: absolute;
    text-align: right;
    top: 12rem;
    right: 2rem;
    width: 75%; }
  .card .card-heading-span {
    padding: 1rem 1.5rem;
    -webkit-box-decoration-break: clone;
    box-decoration-break: clone; }
  .card .card-heading-span-1 {
    background-image: linear-gradient(to right bottom, rgba(255, 185, 0, 0.85), rgba(255, 119, 48, 0.85)); }
  .card .card-heading-span-2 {
    background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.85), rgba(40, 180, 133, 0.85)); }
  .card .card-heading-span-3 {
    background-image: linear-gradient(to right bottom, rgba(41, 152, 255, 0.85), rgba(86, 67, 250, 0.85)); }
  .card .card-details {
    padding: 3rem; }
    .card .card-details ul {
      list-style: none;
      width: 80%;
      margin: 0 auto; }
    .card .card-details li {
      text-align: center;
      font-size: 1.5rem;
      padding: 1rem; }
      .card .card-details li:not(:last-child) {
        border-bottom: 1px solid #eee; }
  .card .card-action-container {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 90%;
    text-align: center; }
  .card .card-price-container {
    text-align: center;
    margin-bottom: 8rem;
    color: #fff; }
  .card .card-price-only {
    font-size: 1.4rem;
    text-transform: uppercase; }
  .card .card-price-value {
    font-size: 6rem;
    font-weight: 100; }

.story {
  width: 75%;
  margin: 0 auto;
  box-shadow: 0 3rem 6rem rgba(0, 0, 0, 0.1);
  background-color: rgba(255, 255, 255, 0.6);
  border-radius: 3px;
  padding: 6rem 6rem 6rem 9rem; }
  .story:hover .story-image-caption {
    opacity: 1;
    transform: translateY(-50%, -50%); }
  .story:hover .story-image {
    transform: translateX(-4rem) scale(1);
    filter: blur(3px) brightness(80%); }

.story-image-container {
  width: 15rem;
  height: 15rem;
  float: left;
  -webkit-shape-outside: circle(50% at 50% 50%);
  shape-outside: circle(50% at 50% 50%);
  -webkit-clip-path: circle(50% at 50% 50%);
  clip-path: circle(50% at 50% 50%);
  transform: translateX(-3rem);
  position: relative; }

.story-image {
  height: 100%;
  transform: translateX(-4rem) scale(1.4);
  transition: all 0.5s;
  backface-visibility: hidden; }

.story-image-caption {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: #fff;
  text-transform: uppercase;
  font-size: 1.7rem;
  text-align: center;
  opacity: 0;
  transition: all 0.5s;
  backface-visibility: hidden; }

.video-background-container {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  z-index: -1;
  opacity: 0.15; }

.video-background {
  height: 100%;
  width: 100%;
  object-fit: cover; }

.row {
  max-width: 114rem;
  margin: 0 auto; }
  .row:not(:last-child) {
    margin-bottom: 8rem; }
  .row::after {
    content: "";
    display: table;
    clear: both; }
  .row [class^="col-"] {
    float: left; }
    .row [class^="col-"]:not(:last-child) {
      margin-right: 6rem; }
  .row .col-1-of-2 {
    width: calc((100% - 6rem) / 2); }
  .row .col-1-of-3 {
    width: calc((100% - 2 * 6rem) / 3); }
  .row .col-2-of-3 {
    width: calc( 2 * ((100% - 2 * 6rem) / 3) + 6rem); }
  .row .col-1-of-4 {
    width: calc((100% - 3 * 6rem) / 4); }
  .row .col-2-of-4 {
    width: calc( 2 * ((100% - 3 * 6rem) / 4) + 6rem); }
  .row .col-3-of-4 {
    width: calc( 3 * ((100% - 3 * 6rem) / 4) + 2 * 6rem); }

/* Prevents a browser from adding margin & padding to elements */
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  /* This prevents padding and borders being added to the elements specified height/width */
  box-sizing: border-box; }

/* Root Font Size for rem Responsiveness */
html {
  /* Some users will increase the default font-size of their browser */
  /* This is a responsive way to account for these users instead of hardcoding 10px */
  font-size: 62.5%; }

/* Better to specify font universals inside the body tag */
body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  font-size: 1.6rem;
  line-height: 1.7;
  color: #777;
  /* This gives the website the white border */
  padding: 3rem; }
